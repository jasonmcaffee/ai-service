/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Url } from './Url';
import {
    UrlFromJSON,
    UrlFromJSONTyped,
    UrlToJSON,
    UrlToJSONTyped,
} from './Url';

/**
 * 
 * @export
 * @interface BatchCreateUrlResponse
 */
export interface BatchCreateUrlResponse {
    /**
     * Array of created URLs with their status
     * @type {Array<Url>}
     * @memberof BatchCreateUrlResponse
     */
    urls: Array<Url>;
    /**
     * Array of errors that occurred during batch creation
     * @type {Array<string>}
     * @memberof BatchCreateUrlResponse
     */
    errors?: Array<string>;
}

/**
 * Check if a given object implements the BatchCreateUrlResponse interface.
 */
export function instanceOfBatchCreateUrlResponse(value: object): value is BatchCreateUrlResponse {
    if (!('urls' in value) || value['urls'] === undefined) return false;
    return true;
}

export function BatchCreateUrlResponseFromJSON(json: any): BatchCreateUrlResponse {
    return BatchCreateUrlResponseFromJSONTyped(json, false);
}

export function BatchCreateUrlResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BatchCreateUrlResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'urls': ((json['urls'] as Array<any>).map(UrlFromJSON)),
        'errors': json['errors'] == null ? undefined : json['errors'],
    };
}

export function BatchCreateUrlResponseToJSON(json: any): BatchCreateUrlResponse {
    return BatchCreateUrlResponseToJSONTyped(json, false);
}

export function BatchCreateUrlResponseToJSONTyped(value?: BatchCreateUrlResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'urls': ((value['urls'] as Array<any>).map(UrlToJSON)),
        'errors': value['errors'],
    };
}

