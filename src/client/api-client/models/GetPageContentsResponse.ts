/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetPageContentsResponse
 */
export interface GetPageContentsResponse {
    /**
     * 
     * @type {string}
     * @memberof GetPageContentsResponse
     */
    markdown: string;
    /**
     * 
     * @type {number}
     * @memberof GetPageContentsResponse
     */
    wordCount: number;
    /**
     * 
     * @type {number}
     * @memberof GetPageContentsResponse
     */
    tokenCount: number;
}

/**
 * Check if a given object implements the GetPageContentsResponse interface.
 */
export function instanceOfGetPageContentsResponse(value: object): value is GetPageContentsResponse {
    if (!('markdown' in value) || value['markdown'] === undefined) return false;
    if (!('wordCount' in value) || value['wordCount'] === undefined) return false;
    if (!('tokenCount' in value) || value['tokenCount'] === undefined) return false;
    return true;
}

export function GetPageContentsResponseFromJSON(json: any): GetPageContentsResponse {
    return GetPageContentsResponseFromJSONTyped(json, false);
}

export function GetPageContentsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetPageContentsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'markdown': json['markdown'],
        'wordCount': json['wordCount'],
        'tokenCount': json['tokenCount'],
    };
}

export function GetPageContentsResponseToJSON(json: any): GetPageContentsResponse {
    return GetPageContentsResponseToJSONTyped(json, false);
}

export function GetPageContentsResponseToJSONTyped(value?: GetPageContentsResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'markdown': value['markdown'],
        'wordCount': value['wordCount'],
        'tokenCount': value['tokenCount'],
    };
}

