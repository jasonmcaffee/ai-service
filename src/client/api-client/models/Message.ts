/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageContext } from './MessageContext';
import {
    MessageContextFromJSON,
    MessageContextFromJSONTyped,
    MessageContextToJSON,
    MessageContextToJSONTyped,
} from './MessageContext';

/**
 * 
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    messageId: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    sentByMemberId: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    messageText: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    createdDate: string;
    /**
     * 
     * @type {string}
     * @memberof Message
     */
    role: string;
    /**
     * 
     * @type {MessageContext}
     * @memberof Message
     */
    messageContext: MessageContext | null;
}

/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    if (!('messageId' in value) || value['messageId'] === undefined) return false;
    if (!('sentByMemberId' in value) || value['sentByMemberId'] === undefined) return false;
    if (!('messageText' in value) || value['messageText'] === undefined) return false;
    if (!('createdDate' in value) || value['createdDate'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('messageContext' in value) || value['messageContext'] === undefined) return false;
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'messageId': json['messageId'],
        'sentByMemberId': json['sentByMemberId'],
        'messageText': json['messageText'],
        'createdDate': json['createdDate'],
        'role': json['role'],
        'messageContext': MessageContextFromJSON(json['messageContext']),
    };
}

export function MessageToJSON(json: any): Message {
    return MessageToJSONTyped(json, false);
}

export function MessageToJSONTyped(value?: Message | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messageId': value['messageId'],
        'sentByMemberId': value['sentByMemberId'],
        'messageText': value['messageText'],
        'createdDate': value['createdDate'],
        'role': value['role'],
        'messageContext': MessageContextToJSON(value['messageContext']),
    };
}

