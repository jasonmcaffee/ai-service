/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TextToSpeechRequest
 */
export interface TextToSpeechRequest {
    /**
     * 
     * @type {string}
     * @memberof TextToSpeechRequest
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof TextToSpeechRequest
     */
    model: string;
    /**
     * 
     * @type {string}
     * @memberof TextToSpeechRequest
     */
    voice: string;
    /**
     * 
     * @type {string}
     * @memberof TextToSpeechRequest
     */
    responseFormat: string;
    /**
     * 
     * @type {number}
     * @memberof TextToSpeechRequest
     */
    speed: number;
}

/**
 * Check if a given object implements the TextToSpeechRequest interface.
 */
export function instanceOfTextToSpeechRequest(value: object): value is TextToSpeechRequest {
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('voice' in value) || value['voice'] === undefined) return false;
    if (!('responseFormat' in value) || value['responseFormat'] === undefined) return false;
    if (!('speed' in value) || value['speed'] === undefined) return false;
    return true;
}

export function TextToSpeechRequestFromJSON(json: any): TextToSpeechRequest {
    return TextToSpeechRequestFromJSONTyped(json, false);
}

export function TextToSpeechRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TextToSpeechRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'text': json['text'],
        'model': json['model'],
        'voice': json['voice'],
        'responseFormat': json['responseFormat'],
        'speed': json['speed'],
    };
}

export function TextToSpeechRequestToJSON(json: any): TextToSpeechRequest {
    return TextToSpeechRequestToJSONTyped(json, false);
}

export function TextToSpeechRequestToJSONTyped(value?: TextToSpeechRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'text': value['text'],
        'model': value['model'],
        'voice': value['voice'],
        'responseFormat': value['responseFormat'],
        'speed': value['speed'],
    };
}

