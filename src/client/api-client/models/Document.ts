/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Document
 */
export interface Document {
    /**
     * 
     * @type {number}
     * @memberof Document
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    createDate: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    updatedDate: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    text: string;
    /**
     * 
     * @type {object}
     * @memberof Document
     */
    metadata: object;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    filePath: string;
}

/**
 * Check if a given object implements the Document interface.
 */
export function instanceOfDocument(value: object): value is Document {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('createDate' in value) || value['createDate'] === undefined) return false;
    if (!('updatedDate' in value) || value['updatedDate'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    if (!('filePath' in value) || value['filePath'] === undefined) return false;
    return true;
}

export function DocumentFromJSON(json: any): Document {
    return DocumentFromJSONTyped(json, false);
}

export function DocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Document {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createDate': json['createDate'],
        'updatedDate': json['updatedDate'],
        'text': json['text'],
        'metadata': json['metadata'],
        'filePath': json['filePath'],
    };
}

export function DocumentToJSON(json: any): Document {
    return DocumentToJSONTyped(json, false);
}

export function DocumentToJSONTyped(value?: Document | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'createDate': value['createDate'],
        'updatedDate': value['updatedDate'],
        'text': value['text'],
        'metadata': value['metadata'],
        'filePath': value['filePath'],
    };
}

