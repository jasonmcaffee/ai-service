/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LoadModelRequest
 */
export interface LoadModelRequest {
    /**
     * 
     * @type {string}
     * @memberof LoadModelRequest
     */
    modelPath: string;
    /**
     * 
     * @type {number}
     * @memberof LoadModelRequest
     */
    ngl: number | null;
    /**
     * 
     * @type {string}
     * @memberof LoadModelRequest
     */
    host: string | null;
    /**
     * 
     * @type {number}
     * @memberof LoadModelRequest
     */
    contextSize: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof LoadModelRequest
     */
    jinja: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof LoadModelRequest
     */
    additionalLlamacppServerParams: string | null;
}

/**
 * Check if a given object implements the LoadModelRequest interface.
 */
export function instanceOfLoadModelRequest(value: object): value is LoadModelRequest {
    if (!('modelPath' in value) || value['modelPath'] === undefined) return false;
    if (!('ngl' in value) || value['ngl'] === undefined) return false;
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('contextSize' in value) || value['contextSize'] === undefined) return false;
    if (!('jinja' in value) || value['jinja'] === undefined) return false;
    if (!('additionalLlamacppServerParams' in value) || value['additionalLlamacppServerParams'] === undefined) return false;
    return true;
}

export function LoadModelRequestFromJSON(json: any): LoadModelRequest {
    return LoadModelRequestFromJSONTyped(json, false);
}

export function LoadModelRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoadModelRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'modelPath': json['modelPath'],
        'ngl': json['ngl'],
        'host': json['host'],
        'contextSize': json['contextSize'],
        'jinja': json['jinja'],
        'additionalLlamacppServerParams': json['additionalLlamacppServerParams'],
    };
}

export function LoadModelRequestToJSON(json: any): LoadModelRequest {
    return LoadModelRequestToJSONTyped(json, false);
}

export function LoadModelRequestToJSONTyped(value?: LoadModelRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'modelPath': value['modelPath'],
        'ngl': value['ngl'],
        'host': value['host'],
        'contextSize': value['contextSize'],
        'jinja': value['jinja'],
        'additionalLlamacppServerParams': value['additionalLlamacppServerParams'],
    };
}

