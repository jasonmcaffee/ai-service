/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Image
 */
export interface Image {
    /**
     * 
     * @type {string}
     * @memberof Image
     */
    imageFileName: string;
    /**
     * 
     * @type {string}
     * @memberof Image
     */
    promptUsedToCreateImage: string;
    /**
     * 
     * @type {number}
     * @memberof Image
     */
    height: number;
    /**
     * 
     * @type {number}
     * @memberof Image
     */
    width: number;
    /**
     * 
     * @type {string}
     * @memberof Image
     */
    memberId: string;
    /**
     * 
     * @type {string}
     * @memberof Image
     */
    createdDate: string;
    /**
     * 
     * @type {string}
     * @memberof Image
     */
    promptId: string;
}

/**
 * Check if a given object implements the Image interface.
 */
export function instanceOfImage(value: object): value is Image {
    if (!('imageFileName' in value) || value['imageFileName'] === undefined) return false;
    if (!('promptUsedToCreateImage' in value) || value['promptUsedToCreateImage'] === undefined) return false;
    if (!('height' in value) || value['height'] === undefined) return false;
    if (!('width' in value) || value['width'] === undefined) return false;
    if (!('memberId' in value) || value['memberId'] === undefined) return false;
    if (!('createdDate' in value) || value['createdDate'] === undefined) return false;
    if (!('promptId' in value) || value['promptId'] === undefined) return false;
    return true;
}

export function ImageFromJSON(json: any): Image {
    return ImageFromJSONTyped(json, false);
}

export function ImageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Image {
    if (json == null) {
        return json;
    }
    return {
        
        'imageFileName': json['imageFileName'],
        'promptUsedToCreateImage': json['promptUsedToCreateImage'],
        'height': json['height'],
        'width': json['width'],
        'memberId': json['memberId'],
        'createdDate': json['createdDate'],
        'promptId': json['promptId'],
    };
}

export function ImageToJSON(json: any): Image {
    return ImageToJSONTyped(json, false);
}

export function ImageToJSONTyped(value?: Image | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'imageFileName': value['imageFileName'],
        'promptUsedToCreateImage': value['promptUsedToCreateImage'],
        'height': value['height'],
        'width': value['width'],
        'memberId': value['memberId'],
        'createdDate': value['createdDate'],
        'promptId': value['promptId'],
    };
}

