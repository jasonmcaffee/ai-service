/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StatusTopic } from './StatusTopic';
import {
    StatusTopicFromJSON,
    StatusTopicFromJSONTyped,
    StatusTopicToJSON,
    StatusTopicToJSONTyped,
} from './StatusTopic';

/**
 * 
 * @export
 * @interface CreateMessage
 */
export interface CreateMessage {
    /**
     * 
     * @type {string}
     * @memberof CreateMessage
     */
    messageText: string;
    /**
     * 
     * @type {object}
     * @memberof CreateMessage
     */
    imageUrl: object | null;
    /**
     * 
     * @type {object}
     * @memberof CreateMessage
     */
    toolCallsJson: object | null;
    /**
     * 
     * @type {string}
     * @memberof CreateMessage
     */
    role: string;
    /**
     * 
     * @type {{ [key: string]: StatusTopic; }}
     * @memberof CreateMessage
     */
    statusTopicsKeyValues: { [key: string]: StatusTopic; } | null;
}

/**
 * Check if a given object implements the CreateMessage interface.
 */
export function instanceOfCreateMessage(value: object): value is CreateMessage {
    if (!('messageText' in value) || value['messageText'] === undefined) return false;
    if (!('imageUrl' in value) || value['imageUrl'] === undefined) return false;
    if (!('toolCallsJson' in value) || value['toolCallsJson'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    if (!('statusTopicsKeyValues' in value) || value['statusTopicsKeyValues'] === undefined) return false;
    return true;
}

export function CreateMessageFromJSON(json: any): CreateMessage {
    return CreateMessageFromJSONTyped(json, false);
}

export function CreateMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'messageText': json['messageText'],
        'imageUrl': json['imageUrl'],
        'toolCallsJson': json['toolCallsJson'],
        'role': json['role'],
        'statusTopicsKeyValues': (json['statusTopicsKeyValues'] == null ? null : mapValues(json['statusTopicsKeyValues'], StatusTopicFromJSON)),
    };
}

export function CreateMessageToJSON(json: any): CreateMessage {
    return CreateMessageToJSONTyped(json, false);
}

export function CreateMessageToJSONTyped(value?: CreateMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messageText': value['messageText'],
        'imageUrl': value['imageUrl'],
        'toolCallsJson': value['toolCallsJson'],
        'role': value['role'],
        'statusTopicsKeyValues': (value['statusTopicsKeyValues'] == null ? null : mapValues(value['statusTopicsKeyValues'], StatusTopicToJSON)),
    };
}

