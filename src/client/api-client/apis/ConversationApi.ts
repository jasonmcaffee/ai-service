/* tslint:disable */
/* eslint-disable */
/**
 * AI API
 * API to manage to interact with AI
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Conversation,
} from '../models/index';
import {
    ConversationFromJSON,
    ConversationToJSON,
} from '../models/index';

export interface ConversationControllerGetConversationRequest {
    conversationId: string;
}

/**
 * 
 */
export class ConversationApi extends runtime.BaseAPI {

    /**
     * conversation
     */
    async conversationControllerGetConversationRaw(requestParameters: ConversationControllerGetConversationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Conversation>> {
        if (requestParameters['conversationId'] == null) {
            throw new runtime.RequiredError(
                'conversationId',
                'Required parameter "conversationId" was null or undefined when calling conversationControllerGetConversation().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/conversations/{conversationId}`.replace(`{${"conversationId"}}`, encodeURIComponent(String(requestParameters['conversationId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ConversationFromJSON(jsonValue));
    }

    /**
     * conversation
     */
    async conversationControllerGetConversation(requestParameters: ConversationControllerGetConversationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Conversation> {
        const response = await this.conversationControllerGetConversationRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
